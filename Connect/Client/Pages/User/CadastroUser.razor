@page  "/User/CadastroUser"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Cadastro do Usuário</h4>
    <div class="card-body">
        <EditForm Model="@user" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
            <DataAnnotationsValidator />
            <div class="form-row">
                <div class="form-group col">
                    <label>Título</label>
                    <InputSelect @bind-Value="user.Title" class="form-control">
                        <option value=""></option>
                        <option value="Sr">Sr</option>
                        <option value="Sra">Sra</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => user.Title)" />
                </div>
                <div class="form-group col-5">
                    <label>First Name</label>
                    <InputText @bind-Value="user.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => user.FirstName)" />
                </div>
                <div class="form-group col-5">
                    <label>Middle Name</label>
                    <InputText @bind-Value="user.MiddleName" class="form-control" />
                    <ValidationMessage For="@(() => user.MiddleName)" />
                </div>
                <div class="form-group col-5">
                    <label>Last Name</label>
                    <InputText @bind-Value="user.LastName" class="form-control" />
                    <ValidationMessage For="@(() => user.LastName)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-5">
                <label>CEP</label>
                    <InputNumber @bind-Value="Address.CEP" class="form-control" />
                    <ValidationMessage For="@(() => Address.CEP)" />
                </div>
                <div class="form-group col-5">
                <label>Rua</label>
                    <InputText @bind-Value="Address.Rua" class="form-control" />
                    <ValidationMessage For="@(() => Address.Rua)" />
                </div>
                <div class="form-group col-5">
                <label>Numero</label>
                    <InputNumber @bind-Value="Address.Numero" class="form-control" />
                    <ValidationMessage For="@(() => Address.Numero)" />
                </div>
                <div class="form-group col-5">
                <label>Bairro</label>
                    <InputText @bind-Value="Address.Bairro" class="form-control" />
                    <ValidationMessage For="@(() => Address.Bairro)" />
                </div>
                <div class="form-group col-5">
                <label>Cidade</label>
                    <InputText @bind-Value="Address.Cidade" class="form-control" />
                    <ValidationMessage For="@(() => Address.Cidade)" />
                </div>
                <div class="form-group col-5">
                <label>Estado</label>
                    <InputText @bind-Value="Address.Estado" class="form-control" />
                    <ValidationMessage For="@(() => Address.Estado)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Date of Birth</label>
                    <InputDate @bind-Value="user.DateOfBirth" class="form-control" />
                    <ValidationMessage For="@(() => user.DateOfBirth)" />
                </div>
                <div class="form-group col">
                    <label>Email</label>
                    <InputText @bind-Value="user.Email" class="form-control" />
                    <ValidationMessage For="@(() => user.Email)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Password</label>
                    <InputText @bind-Value="user.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>
                <div class="form-group col">
                    <label>Confirm Password</label>
                    <InputText @bind-Value="user.ConfirmPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => user.ConfirmPassword)" />
                </div>
            </div>
            <div class="form-group form-check">
                <InputCheckbox @bind-Value="user.AcceptTerms" id="acceptTerms" class="form-check-input" />
                <label for="acceptTerms" class="form-check-label">Accept Terms & Conditions</label>
                <ValidationMessage For="@(() => user.AcceptTerms)" />
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private User user = new User();

    private Address Address = new Address();

    private EditContext editContext { get; set; }

    private async Task HandleValidSubmit()
    {
        user.Address = Address;
        //Enviar dados para o Controller no Backend
        var teste = await Http.PostAsJsonAsync("/User/Create", user);
        NavigationManager.NavigateTo("user/ListUser");

    }

    private void HandleReset()
    {
        user = new User();
        editContext = new EditContext(user);
    }

}
